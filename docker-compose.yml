services:
  # grafana:
  #   image: grafana/grafana:10.1.2
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-storage:/var/lib/grafana

  # loki:
  #   image: grafana/loki:2.9.0
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
    
  # promtail:
  #   image: grafana/promtail:2.9.0
  #   volumes:
  #     - ./src/shared/observability/config/promtail-config.yaml:/etc/promtail/config.yaml
  #     - ./nestjs-logs:/var/log/nest
  #   command: -config.file=/etc/promtail/config.yaml

  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./src/shared/observability/config/prometheus.yml:/etc/prometheus/prometheus.yml

  # tempo:
  #   image: grafana/tempo:2.3.1
  #   ports:
  #     - "3200:3200"
  #   command: ["-config.file=/etc/tempo.yaml"]
  #   volumes:
  #     - ./src/shared/observability/config/tempo.yaml:/etc/tempo.yaml

  postgres:
    image: postgres:latest
    container_name: credpalfx_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_DB}
    ports:
      - 5432:5432
    volumes:
      - credpalfx_postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - credpalfx_default

  redis:
    image: redis:latest
    container_name: credpalfx_redis
    env_file:
      - .env
    ports:
      - 6379:6379
    volumes:
      - credpalfx_redis_data:/data
    restart: unless-stopped
    networks:
      - credpalfx_default

networks:
  credpalfx_default:
    driver: bridge
    name: credpalfx_default

volumes:
  credpalfx_postgres_data:
    driver: local
  credpalfx_redis_data:
    driver: local
  # grafana-storage:
  #   driver: local
