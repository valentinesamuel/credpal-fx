services:

  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
        - ./nestjs-logs:/nestjs-logs:ro
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--web.enable-lifecycle'
      restart: unless-stopped
      networks:
        - monitoring

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./nestjs-logs:/nestjs-logs:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - prometheus

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml
      - ./monitoring/loki/loki_data:/loki
      - ./nestjs-logs:/nestjs-logs:ro
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - monitoring

  # Promtail - Log collector for Loki
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./nestjs-logs:/nestjs-logs:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - loki

  # Tempo - Distributed tracing backend
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: -config.file=/etc/tempo/tempo-config.yml
    volumes:
      - ./monitoring/tempo/tempo-config.yml:/etc/tempo/tempo-config.yml
      - ./monitoring/tempo/tempo_data:/tmp/tempo
      - ./nestjs-logs:/nestjs-logs:ro
    ports:
      - "3200:3200"  # tempo
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
    restart: unless-stopped
    networks:
      - monitoring

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: --config=/etc/otel-collector-config.yml
    volumes:
      - ./monitoring/otel-collector/otel-collector-config.yml:/etc/otel-collector-config.yml
      - ./nestjs-logs:/nestjs-logs:ro
    ports:
      - "4316:4318"  # OTLP gRPC receiver
      - "8888:8888"  # metrics endpoint
      - "8889:8889"  # health check extension
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - tempo
      - prometheus
      - loki

  postgres:
    image: postgres:latest
    container_name: credpalfx_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_DB}
    ports:
      - 5432:5432
    volumes:
      - credpalfx_postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - credpalfx_default

  redis:
    image: redis:latest
    container_name: credpalfx_redis
    env_file:
      - .env
    ports:
      - 6379:6379
    volumes:
      - credpalfx_redis_data:/data
    restart: unless-stopped
    networks:
      - credpalfx_default
  
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: credpalfx_redisinsight
    ports:
      - 5540:5540
    volumes:
      - redisinsight_data:/db
    depends_on:
      - redis
    networks:
      - credpalfx_default
    restart: unless-stopped

networks:
  credpalfx_default:
    driver: bridge
    name: credpalfx_default
  monitoring:
    driver: bridge
    name: monitoring

volumes:
  credpalfx_postgres_data:
    driver: local
  credpalfx_redis_data:
    driver: local
  loki_data:
    driver: local
  tempo_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nestjs-logs:
    driver: local
  redisinsight_data:
    driver: local

